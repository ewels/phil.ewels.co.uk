---
const {
  title,
  subtitle,
  img,
  imgDark,
  noIconPadding,
  description,
  startDate,
  endDate = false,
  url,
  postDate,
  badge,
  talk_online = false,
  talk_type,
  countryFlag,
  tags,
  target = "_self",
  hasYouTube,
  hasDownload,
} = Astro.props;
import { Icon } from "astro-icon/components";

let countryFlagIcon;
let countryFlagIconDark;
if (talk_type == "Bytesize") {
  countryFlagIcon = "nfcore";
  countryFlagIconDark = "nfcoredark";
} else if (talk_type == "Webinar") {
  countryFlagIcon = "seqera";
  countryFlagIconDark = "seqeradark";
} else if (talk_online) {
  countryFlagIcon = "bi:globe";
  countryFlagIconDark = "bi:globe";
} else if (countryFlag) {
  countryFlagIcon = "flag:" + countryFlag + "-4x3";
  countryFlagIconDark = "flag:" + countryFlag + "-4x3";
}

const nth = (d) => {
  if (d > 3 && d < 21) return "th";
  switch (d % 10) {
    case 1:
      return "st";
    case 2:
      return "nd";
    case 3:
      return "rd";
    default:
      return "th";
  }
};
const dateString = (d) => {
  return d.toLocaleString("default", { month: "long" }) + " " + d.getDate() + "<sup>" + nth(d.getDate()) + "</sup>";
};

function yearRange(startDate: Date, endDate: Date) {
  const startYear = startDate.getFullYear();
  const endYear = endDate ? endDate.getFullYear() : "present";
  return startYear + " - " + endYear;
}
---

<div class="horizontal-card-container">
  <a href={url} target={target} class="horizontal-card py-2 2xl:p-4">
    {img && <img src={img} alt={title} class={"block dark:hidden" + (noIconPadding ? "" : " p-2")} />}
    {
      (img || imgDark) && (
        <img
          src={imgDark ?? img}
          alt={title}
          class={"hidden dark:block dark:border-gray-700" + (noIconPadding ? "" : " p-2")}
        />
      )
    }
    <div class="w-full grow">
      <h1 class={subtitle ? "text-lg" : "text-xl"}>
        {title}
        {badge && <div class="badge">{badge}</div>}
      </h1>
      {subtitle && <h2 class="text-l">{subtitle} </h2>}
      <p class="text-1xl block py-1 font-light text-gray-500 dark:text-gray-300">
        {countryFlagIcon && <Icon name={countryFlagIcon} class="mr-2 hidden w-[18px] md:inline-block dark:md:hidden" />}
        {
          countryFlagIconDark && (
            <Icon name={countryFlagIconDark} class="mr-2 hidden w-[18px] md:hidden dark:md:inline-block" />
          )
        }
        {postDate && <Fragment set:html={dateString(postDate)} />}
        {postDate && description && <span class="mx-2">&bull;</span>}
        {description}
        {startDate && <span class="ml-2 opacity-50">{yearRange(startDate, endDate)}</span>}
        {tags && tags.map((tag) => <span class="tag">{tag}</span>)}
        {hasDownload && <Icon name="bi:file-earmark-pdf" class="icon" title="Slides available" />}
        {hasYouTube && <Icon name="mdi:youtube" class="icon" title="Recording available" />}
      </p>
    </div>
    <div class="hidden md:block">
      <Icon name="bi:arrow-right" size="16" class="text-black-50" />
    </div>
  </a>
</div>

<style>
  .horizontal-card {
    z-index: 0;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    gap: 1rem;
  }
  .horizontal-card-container {
    @apply -mx-4 border-t border-slate-300 border-l-blue-500 bg-white px-4 transition-[border,margin,padding] ease-in-out last-of-type:border-b hover:border-l-8 md:-mx-10 md:px-10 md:hover:-mr-10 md:hover:pr-8 dark:border-zinc-600 dark:border-l-blue-500 dark:bg-black/20;

    a img {
      @apply w-12 rounded border shadow;
    }
    h1 {
      @apply block font-medium;
    }
    .tag {
      @apply ml-2 hidden whitespace-nowrap rounded border border-gray-400 bg-gray-50 px-1 text-xs text-slate-800 opacity-50 md:inline-block dark:bg-gray-800 dark:text-slate-200;
    }
    .icon {
      @apply ml-2 hidden w-[18px] md:inline-block;
    }
  }
  .badge {
    @apply mx-2 inline-block rounded-full bg-indigo-500/10 px-2 py-1 align-middle text-xs leading-none text-indigo-500;
  }
</style>
